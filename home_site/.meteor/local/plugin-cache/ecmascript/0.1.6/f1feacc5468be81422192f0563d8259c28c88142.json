{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"if (Meteor.isClient) {\n  // counter starts at 0\n  Session.setDefault('page', 'property');\n\n  Meteor.startup(function () {\n    console.log(\"Load Maps\");\n    GoogleMaps.load();\n  });\n\n  UI.body.helpers({\n    isPage: function (page) {\n      //sets up page function\n      return Session.equals('page', page);\n    }\n  });\n\n  UI.body.events({\n    'click .clickChangesPage': function (event, template) {\n      //on event change template\n      Session.set('page', event.currentTarget.getAttribute('data-page')); //to whatever is in data-page\n    }\n  });\n\n  Template.contact.events({\n    'submit form#contactForm': function (e) {\n      var contactForm = $(e.currentTarget),\n          fname = contactForm.find('#firstName').val(),\n          lname = contactForm.find('#lastName').val(),\n          email = contactForm.find('#email').val(),\n          phone = contactForm.find('#phone').val(),\n          message = contactForm.find(\"#message\").val();\n\n      //isFilled and isEmail are my helper methods, which checks if variable exists or is email address valid\n      if (isFilled(fname) && isFilled(lname) && isFilled(email) && isFilled(phone) && isFilled(message) && isEmail(email)) {\n        var dataText = \"Message from: \" + fname + \" \" + lname + \"\\rEmail: \" + email + \"\\rPhone: \" + phone + \"\\rContent:\" + message;\n\n        Meteor.call('sendEmail', dataText);\n        //throwAlert is my helper method which creates popup with message\n        throwAlert('Email send.', 'success');\n      } else {\n        throwAlert('An error occurred. Sorry', 'error');\n        return false;\n      }\n    }\n  });\n\n  Template.mapLoc.helpers({\n    mapOptions: function () {\n      if (GoogleMaps.loaded()) {\n        return {\n          center: new google.maps.LatLng(-37.8136, 144.9631),\n          zoom: 8\n        };\n      }\n    }\n  });\n\n  Template.mapLoc.onCreated(function () {\n    GoogleMaps.ready('map', function (map) {\n      google.maps.event.addListener(map.instance, 'click', function (event) {\n        Markers.insert({ lat: event.latLng.lat(), lng: event.latLng.lng() });\n      });\n      console.log(\"Map ready\");\n    });\n  });\n\n  Markers = new Mongo.Collection('markers');\n}\n\nvar locations = [\n//Olympia Area\n[\"Church of the Good Shepherd - 1601 North Street SE\", 47.015693, -122.880327, \"http://maps.google.com/maps?q=loc:\"]];\n\n// initialize variable for acquiring the users position(latitude and Longitutde)\nvar latLng;\n\nTemplate.secondPage.onCreated(function () {\n  // We can use the `ready` callback to interact with the map API once the map is ready.\n  GoogleMaps.ready(\"exampleMap\", function (map) {\n    // set variable latLng to get geolocation from device GPS services if they are turned on\n    latLng = Geolocation.latLng();\n    // initilize and set variable to creat google maps marker for users current GPS position\n    var userPos = new google.maps.Marker({\n      // position of the marker set to variable latLng\n      position: latLng,\n      // set the icon to the google maps yellow-person\n      icon: 'https://www.google.com/help/hc/images/maps_street_view.png',\n      // set google maps marker animation to DROP\n      animation: google.maps.Animation.DROP,\n      // tell it which map to load on, this case map.instance\n      map: map.instance\n    });\n\n    // initialize variable which gets a google maps infoWindow for each marker\n    var infowindow = new google.maps.InfoWindow();\n    // initialize variables for drop box markers, markers, and iterator called i\n    var markers, i;\n    // iterate over all of the items in the locations variable array defined above\n    for (i = 0; i < locations.length; i++) {\n      // set variable markers to new google maps marker\n      markers = new google.maps.Marker({\n        // the position of this new marker should be the lat and long of the drop box, which are the 1st and 2nd\n        // elements of the locations arrays\n        position: new google.maps.LatLng(locations[i][1], locations[i][2]),\n        // url for each location marker NOT SET UP YET\n        url: locations[i][3] + locations[i][1] + \",\" + locations[i][2],\n        // tell it which map to load on, this case map.instance\n        map: map.instance\n      });\n      // add a google map event listener to check if a drop box marker is clicked\n      google.maps.event.addListener(markers, 'click', (function (markers, i) {\n        return function () {\n          // tell the contents of the infoWindow to be set to the 0th elements in the locations array\n          infowindow.setContent(locations[i][0]);\n          window.location.href = markers.url;\n          // tell the infoWindow which map to load on, this care map.instance\n          infowindow.open(map.instance, markers);\n        };\n        // note here\n      })(markers, i));\n    };\n  });\n});\n\n// helper code for secondPage, which is the Map Page\nTemplate.secondPage.helpers({\n  exampleMapOptions: function () {\n    // set latLng to Geolocation position from GPS services\n    latLng = Geolocation.latLng();\n    // check to see if google maps has loaded and that variable latLng is not NULL\n    if (GoogleMaps.loaded() && latLng) {\n      // map initialization options if the above was true\n      return {\n        // set the center of the map to your GPS positions\n        center: new google.maps.LatLng(latLng.lat, latLng.lng),\n        // set it so you cannot use the scrollwheel to manipulate the zoom of the map\n        scrollwheel: false,\n        // set it so you cannot use your finger to drag the map around on mobile\n        draggable: false,\n        // set the zoom of the map when it loads to 14 (0 is all of earth, 20 is ontop of you)\n        zoom: 14\n      };\n    }\n    // if the map is loaded but Geolocation is not available, center map around Thurston County\n    /*else if(GoogleMaps.loaded()) {\n      return {\n      // set the center of the map to Thurston County\n      center: new google.maps.LatLng(47.0425, -122.8931),\n      // set it so you cannot use the scrollwheel to manipulate the zoom of the map\n      scrollwheel: false,\n      // set it so you cannot use your finger to drag the map around on mobile\n      draggable: false,\n      zoom: 10\n      };\n    }  */\n    console.log(\"Map is ready and showing\");\n  }\n});\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    // code to run on server at startup\n  });\n}","ast":null,"map":{"version":3,"sources":["/home_site.js"],"names":[],"mappings":"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","file":"/home_site.js.map","sourcesContent":["if (Meteor.isClient) {\n  // counter starts at 0\n  Session.setDefault('page', 'property');\n\n  Meteor.startup(function() {\n    console.log(\"Load Maps\");\n    GoogleMaps.load();\n  });\n\n  UI.body.helpers({\n      isPage: function(page){//sets up page function\n          return Session.equals('page', page)\n      }\n  });\n\n  UI.body.events({\n      'click .clickChangesPage': function(event, template){//on event change template\n          Session.set('page', event.currentTarget.getAttribute('data-page'))//to whatever is in data-page\n      }\n  });\n\n  Template.contact.events({\n    'submit form#contactForm':function(e){\n      var contactForm = $(e.currentTarget),\n        fname = contactForm.find('#firstName').val(),\n        lname = contactForm.find('#lastName').val(),\n        email = contactForm.find('#email').val(),\n        phone = contactForm.find('#phone').val(),\n        message = contactForm.find(\"#message\").val();\n\n      //isFilled and isEmail are my helper methods, which checks if variable exists or is email address valid\n      if(isFilled(fname) && isFilled(lname) && isFilled(email) && isFilled(phone) && isFilled(message) && isEmail(email)){\n        var dataText = \"Message from: \" + fname + \" \" + lname + \"\\rEmail: \" + email + \"\\rPhone: \" + phone + \"\\rContent:\" + message;\n\n        Meteor.call('sendEmail', dataText);\n        //throwAlert is my helper method which creates popup with message\n        throwAlert('Email send.', 'success');\n      }else{\n        throwAlert('An error occurred. Sorry', 'error');\n        return false;\n      }\n    }\n  });\n\n  Template.mapLoc.helpers ({\n    mapOptions: function() {\n      if (GoogleMaps.loaded()) {\n        return {\n          center: new google.maps.LatLng(-37.8136, 144.9631),\n          zoom: 8\n        };\n      }\n    }\n  });\n\n  Template.mapLoc.onCreated(function() {\n    GoogleMaps.ready('map', function(map) {\n      google.maps.event.addListener(map.instance, 'click', function(event) {\n        Markers.insert({ lat: event.latLng.lat(), lng: event.latLng.lng() });\n      });\n      console.log(\"Map ready\");\n    });\n  });\n\n  Markers=new Mongo.Collection('markers');\n\n}\n\nvar locations = [\n  //Olympia Area\n  [\"Church of the Good Shepherd - 1601 North Street SE\", 47.015693, -122.880327, \"http://maps.google.com/maps?q=loc:\"],\n\n];\n\n// initialize variable for acquiring the users position(latitude and Longitutde)\nvar latLng;\n\nTemplate.secondPage.onCreated(function() {\n  // We can use the `ready` callback to interact with the map API once the map is ready.\n  GoogleMaps.ready(\"exampleMap\", function(map) {\n    // set variable latLng to get geolocation from device GPS services if they are turned on\n    latLng = Geolocation.latLng();\n    // initilize and set variable to creat google maps marker for users current GPS position\n    var userPos = new google.maps.Marker({\n      // position of the marker set to variable latLng\n      position: latLng,\n      // set the icon to the google maps yellow-person\n      icon: 'https://www.google.com/help/hc/images/maps_street_view.png',\n      // set google maps marker animation to DROP\n      animation: google.maps.Animation.DROP,\n      // tell it which map to load on, this case map.instance\n      map: map.instance\n    });\n\n    // initialize variable which gets a google maps infoWindow for each marker\n    var infowindow = new google.maps.InfoWindow();\n    // initialize variables for drop box markers, markers, and iterator called i\n    var markers, i;\n    // iterate over all of the items in the locations variable array defined above\n    for(i = 0; i < locations.length; i++) {\n      // set variable markers to new google maps marker\n      markers = new google.maps.Marker({\n        // the position of this new marker should be the lat and long of the drop box, which are the 1st and 2nd\n        // elements of the locations arrays\n        position: new google.maps.LatLng(locations[i][1], locations[i][2]),\n        // url for each location marker NOT SET UP YET\n        url: locations[i][3]+locations[i][1]+\",\"+locations[i][2],\n        // tell it which map to load on, this case map.instance\n        map: map.instance\n      });\n      // add a google map event listener to check if a drop box marker is clicked\n      google.maps.event.addListener(markers, 'click', (function(markers, i) {\n        return function() {\n          // tell the contents of the infoWindow to be set to the 0th elements in the locations array\n          infowindow.setContent(locations[i][0]);\n          window.location.href = markers.url;\n          // tell the infoWindow which map to load on, this care map.instance\n          infowindow.open(map.instance, markers);\n        }\n        // note here\n      })(markers, i));\n    };\n  });\n});\n\n// helper code for secondPage, which is the Map Page\nTemplate.secondPage.helpers({\n  exampleMapOptions: function() {\n    // set latLng to Geolocation position from GPS services\n    latLng = Geolocation.latLng();\n    // check to see if google maps has loaded and that variable latLng is not NULL\n    if (GoogleMaps.loaded() && latLng) {\n      // map initialization options if the above was true\n      return {\n        // set the center of the map to your GPS positions \n        center: new google.maps.LatLng(latLng.lat, latLng.lng),\n        // set it so you cannot use the scrollwheel to manipulate the zoom of the map\n        scrollwheel: false,\n        // set it so you cannot use your finger to drag the map around on mobile\n        draggable: false,\n        // set the zoom of the map when it loads to 14 (0 is all of earth, 20 is ontop of you)\n        zoom: 14\n      };\n    }\n    // if the map is loaded but Geolocation is not available, center map around Thurston County\n    /*else if(GoogleMaps.loaded()) {\n      return {\n      // set the center of the map to Thurston County\n      center: new google.maps.LatLng(47.0425, -122.8931),\n      // set it so you cannot use the scrollwheel to manipulate the zoom of the map\n      scrollwheel: false,\n      // set it so you cannot use your finger to drag the map around on mobile\n      draggable: false,\n      zoom: 10\n      };\n    }  */\n    console.log(\"Map is ready and showing\");\n  }\n});\n\n\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    // code to run on server at startup\n  });\n}\n"]},"hash":"f1feacc5468be81422192f0563d8259c28c88142"}
