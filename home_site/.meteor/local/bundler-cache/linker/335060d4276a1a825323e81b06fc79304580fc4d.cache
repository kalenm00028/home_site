[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nEmail = Package.email.Email;\nEmailInternals = Package.email.EmailInternals;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// server/smtp.js                                                      //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nMeteor.startup(function () {                                           // 1\n  process.env.MAIL_URL = 'smtp://eagleviewhillwebsite:password123inallcaps@smtp.gmail.com:587/';\n});                                                                    //\n                                                                       //\nMeteor.methods({                                                       // 6\n  sendEmail: function (to, from, subject, text) {                      // 7\n    check([to, from, subject, text], [String]);                        // 8\n                                                                       //\n    // Let other method calls from the same client start running,      //\n    // without waiting for the email sending to complete.              //\n    this.unblock();                                                    // 12\n                                                                       //\n    //actual email sending method                                      //\n    Email.send({                                                       // 15\n      to: 'eagleviewhillwebsite@gmail.com',                            // 16\n      from: 'eagleviewhillwebsite@gmail.com',                          // 17\n      subject: 'New message from property website',                    // 18\n      text: text                                                       // 19\n    });                                                                //\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/server/smtp.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/server/smtp.js"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,OAAO,CAAC,YAAW;AACxB,SAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,sEAAsE;CAC7F,CAAC,CAAC;;AAGJ,MAAM,CAAC,OAAO,CAAC;AACb,WAAS,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE;AAC5C,SAAK,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;;;;AAI3C,QAAI,CAAC,OAAO,EAAE,CAAC;;;AAGf,SAAK,CAAC,IAAI,CAAC;AACT,QAAE,EAAE,gCAAgC;AACpC,UAAI,EAAE,gCAAgC;AACtC,aAAO,EAAE,mCAAmC;AAC5C,UAAI,EAAE,IAAI;KACX,CAAC,CAAC;GACJ;CACF,CAAC,CAAC,sE","file":"/server/smtp.js","sourcesContent":["Meteor.startup(function() {\r\n\t\tprocess.env.MAIL_URL = 'smtp://eagleviewhillwebsite:password123inallcaps@smtp.gmail.com:587/'\r\n\t});\r\n\r\n\r\nMeteor.methods({\r\n  sendEmail: function (to, from, subject, text) {\r\n    check([to, from, subject, text], [String]);\r\n\r\n    // Let other method calls from the same client start running,\r\n    // without waiting for the email sending to complete.\r\n    this.unblock();\r\n\r\n    //actual email sending method\r\n    Email.send({\r\n      to: 'eagleviewhillwebsite@gmail.com',\r\n      from: 'eagleviewhillwebsite@gmail.com',\r\n      subject: 'New message from property website',\r\n      text: text\r\n    });\r\n  }\r\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// home_site.js                                                        //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nif (Meteor.isClient) {                                                 // 1\n  // counter starts at 0                                               //\n  Session.setDefault('page', 'property');                              // 3\n                                                                       //\n  Meteor.startup(function () {                                         // 5\n    GoogleMaps.load();                                                 // 6\n  });                                                                  //\n                                                                       //\n  UI.body.helpers({                                                    // 9\n    isPage: function (page) {                                          // 10\n      //sets up page function                                          //\n      return Session.equals('page', page);                             // 11\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  UI.body.events({                                                     // 15\n    'click .clickChangesPage': function (event, template) {            // 16\n      //on event change template                                       //\n      Session.set('page', event.currentTarget.getAttribute('data-page')); //to whatever is in data-page\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.contact.events({                                            // 21\n    'submit form#contactForm': function (e) {                          // 22\n      var contactForm = $(e.currentTarget),                            // 23\n          fname = contactForm.find('#firstName').val(),                //\n          lname = contactForm.find('#lastName').val(),                 //\n          email = contactForm.find('#email').val(),                    //\n          phone = contactForm.find('#phone').val(),                    //\n          message = contactForm.find(\"#message\").val();                //\n                                                                       //\n      //isFilled and isEmail are my helper methods, which checks if variable exists or is email address valid\n      if (isFilled(fname) && isFilled(lname) && isFilled(email) && isFilled(phone) && isFilled(message) && isEmail(email)) {\n        var dataText = \"Message from: \" + fname + \" \" + lname + \"\\rEmail: \" + email + \"\\rPhone: \" + phone + \"\\rContent:\" + message;\n                                                                       //\n        Meteor.call('sendEmail', dataText);                            // 34\n        //throwAlert is my helper method which creates popup with message\n        throwAlert('Email send.', 'success');                          // 36\n      } else {                                                         //\n        throwAlert('An error occurred. Sorry', 'error');               // 38\n        return false;                                                  // 39\n      }                                                                //\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.mapLoc.helpers({                                            // 44\n    mapOptions: function () {                                          // 45\n      if (GoogleMaps.loaded()) {                                       // 46\n        return {                                                       // 47\n          center: new google.maps.LatLng(-37.8136, 144.9631),          // 48\n          zoom: 8                                                      // 49\n        };                                                             //\n      }                                                                //\n    }                                                                  //\n  });                                                                  //\n                                                                       //\n  Template.mapLoc.onCreated(function () {                              // 55\n    GoogleMaps.ready('map', function (map) {                           // 56\n      google.maps.event.addListener(map.instance, 'click', function (event) {\n        Markers.insert({ lat: event.latLng.lat(), lng: event.latLng.lng() });\n      });                                                              //\n      console.log(\"Map ready\");                                        // 60\n    });                                                                //\n  });                                                                  //\n                                                                       //\n  Markers = new Mongo.Collection('markers');                           // 64\n}                                                                      //\n                                                                       //\nif (Meteor.isServer) {                                                 // 68\n  Meteor.startup(function () {                                         // 69\n    // code to run on server at startup                                //\n  });                                                                  //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/home_site.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/home_site.js"],"names":[],"mappings":"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","file":"/home_site.js","sourcesContent":["if (Meteor.isClient) {\n  // counter starts at 0\n  Session.setDefault('page', 'property');\n\n  Meteor.startup(function() {\n    GoogleMaps.load();\n  });\n\n  UI.body.helpers({\n      isPage: function(page){//sets up page function\n          return Session.equals('page', page)\n      }\n  });\n\n  UI.body.events({\n      'click .clickChangesPage': function(event, template){//on event change template\n          Session.set('page', event.currentTarget.getAttribute('data-page'))//to whatever is in data-page\n      }\n  });\n\n  Template.contact.events({\n    'submit form#contactForm':function(e){\n      var contactForm = $(e.currentTarget),\n        fname = contactForm.find('#firstName').val(),\n        lname = contactForm.find('#lastName').val(),\n        email = contactForm.find('#email').val(),\n        phone = contactForm.find('#phone').val(),\n        message = contactForm.find(\"#message\").val();\n\n      //isFilled and isEmail are my helper methods, which checks if variable exists or is email address valid\n      if(isFilled(fname) && isFilled(lname) && isFilled(email) && isFilled(phone) && isFilled(message) && isEmail(email)){\n        var dataText = \"Message from: \" + fname + \" \" + lname + \"\\rEmail: \" + email + \"\\rPhone: \" + phone + \"\\rContent:\" + message;\n\n        Meteor.call('sendEmail', dataText);\n        //throwAlert is my helper method which creates popup with message\n        throwAlert('Email send.', 'success');\n      }else{\n        throwAlert('An error occurred. Sorry', 'error');\n        return false;\n      }\n    }\n  });\n\n  Template.mapLoc.helpers ({\n    mapOptions: function() {\n      if (GoogleMaps.loaded()) {\n        return {\n          center: new google.maps.LatLng(-37.8136, 144.9631),\n          zoom: 8\n        };\n      }\n    }\n  });\n\n  Template.mapLoc.onCreated(function() {\n    GoogleMaps.ready('map', function(map) {\n      google.maps.event.addListener(map.instance, 'click', function(event) {\n        Markers.insert({ lat: event.latLng.lat(), lng: event.latLng.lng() });\n      });\n      console.log(\"Map ready\");\n    });\n  });\n\n  Markers=new Mongo.Collection('markers');\n\n}\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    // code to run on server at startup\n  });\n}\n"]}}]